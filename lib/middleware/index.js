import g from"signale";import c from"dayjs";var a=new g.Signale({scope:"WebCrate",logLevel:process.env.LOG_LEVEL||"info",types:{success:{badge:"\u2705",color:"green",label:"success",logLevel:"debug"},info:{badge:"\u2139\uFE0F",color:"blue",label:"info",logLevel:"debug"},request:{badge:"\u{1F4EB}",color:"gray",label:"request",logLevel:"debug"},debug:{badge:"\u{1F537}",color:"cyan",label:"debug",logLevel:"info"},warn:{badge:"\u26A0\uFE0F",color:"yellow",label:"warn",logLevel:"info"}}}),l=({level:e,message:s})=>{if(Reflect.has(a,e)){let n=a[e];n({prefix:`[${c().format("YYYY-MM-DD HH:mm:ss")}]`,message:s,suffix:"(@klauscfhq)"});return}a.warn(`Invalid log level: ${e}`)};import m from"dayjs";var i=({status:e,code:s,message:n,data:o})=>({status:e,code:s||"",message:n||"",data:o}),v=(e,s,n)=>{s.ok=o=>{s.json(i({status:200,message:"ok",data:o}))},s.fail=({status:o,code:r,message:t})=>{o=o!=null?o:500,!t&&o===500&&(t="unknow server internal error"),s.status(o).json(i({status:o,code:r,message:t}))},n()},p=["js/","css/","img/","static/","_nuxt","manifest.json"];function y(e,s,n){if(p.some(r=>e.originalUrl.includes(r))||e.method==="HEAD")return n();let o=m().format("YYYY-MM-DD HH:mm:ss");l({level:"request",message:`${o} ${e.method} ${e.originalUrl}`}),n()}function L(e,s,n){e.originalUrl==="/"&&s.set("Cache-control","no-store"),n()}export{L as disableCaching,p as ignoreRequestStrings,i as resFormat,y as routeLog,v as sendResponse};
